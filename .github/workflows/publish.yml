name: Publish SDK AAR and Package APK

permissions:
  contents: write

on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Run unit tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Run unit tests
        run: ./gradlew test --stacktrace

  instrumented-tests:
    name: Run instrumented tests on emulator
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Start emulator and run Android tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          script: ./gradlew connectedDebugAndroidTest

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: |
            **/build/reports

  publish:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Publish AAR to GitHub Packages
        run: ./gradlew :nowid-sdk:publish -PVERSION_NAME=${GITHUB_REF_NAME}
        env:
          USERNAME: ${{ secrets.USERNAME }}
          TOKEN: ${{ secrets.TOKEN }}

  package:
    name: Build APK and Generate QR Code
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build release APK
        run: ./gradlew :nowid-safe:assembleRelease

      - name: Sign APK
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: nowid-safe/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.KEYSTORE_BASE64 }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
          filePattern: '*.apk'
        env:
          BUILD_TOOLS_VERSION: "34.0.0"

      - name: Rename signed APK
        run: |
          mv nowid-safe/build/outputs/apk/release/nowid-safe-release-unsigned-signed.apk \
             nowid-safe/build/outputs/apk/release/nowid-safe-release.apk

      - name: Install QR code generator
        run: sudo apt-get update && sudo apt-get install -y qrencode

      - name: Generate QR Code
        run: |
          qrencode -o qr.png "https://github.com/${{ github.repository }}/releases/download/${GITHUB_REF_NAME}/nowid-safe-release.apk"

      - name: Create or Update GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: ${{ !startsWith(github.ref_name, 'v') }}
          files: |
            nowid-safe/build/outputs/apk/release/nowid-safe-release.apk
            qr.png
          generate_release_notes: true
          body: |
            ## Download Links
            
            - [Download APK (signed)](https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/nowid-safe-release.apk)
            - **Scan this QR Code to download the APK:**
            
              ![Scan to download](https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/apk-qrcode.png)